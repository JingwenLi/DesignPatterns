模式定义
    简单工厂模式(Simple Factory Pattern)：它属于类创建型模式, 可以根据参数的不同返回不同类的实例。
    简单工厂模式专门定义一个类来负责创建其他类的实例，被创建的实例通常都具有共同的父类。


简单工厂模式包含如下角色：
    Factory：工厂角色
        工厂角色负责实现创建所有实例的内部逻辑

    Product：抽象产品角色
        抽象产品角色是所创建的所有对象的父类，负责描述所有实例所共有的公共接口

    ConcreteProduct：具体产品角色
        具体产品角色是创建目标，所有创建的对象都充当这个角色的某个具体类的实例。


优点
    1.可以降低客户端和具体对象的耦合，把对象的创建和业务逻辑层分开，实现了责任的分割
    2.可以有效的进行代码复用，如客户端A和客户端B都需要一个具体对象，客户端A和客户端B可以通过同一个简单工厂来获取具体类型的实例

缺点
    1.违背了“开闭原则”: “对扩展开放，对修改关闭”, 每次增加一个类的时候必须修改工厂类
    2.工厂内集中了所有产品创建逻辑，一旦不能正常工作，所有产品都会受到影响