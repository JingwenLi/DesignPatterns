模式定义
    工厂方法(Factory Method): 定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类。
    核心工厂类不再负责产品的创建，这样核心类成为一个抽象工厂角色，仅负责具体工厂子类必须实现的接口，
    这样进一步抽象化的好处是使得工厂方法模式可以使系统在不修改具体工厂角色的情况下引进新的产品。


工厂方法模式包含如下角色：
    Factory：抽象工厂角色
        定义具体工厂子类必须实现的接口

    ConcreteFactory：具体工厂角色
        工厂角色负责实现创建单个实例的内部逻辑

    Product：抽象产品角色
        工厂类所创建的所有产品的父类，封装了产品对象的公共方法

    ConcreteProduct：具体产品角色
        创建的目标，有专门的具体工厂创建，它们之间往往一一对应

优点
    1.可以降低代码耦合，把对象的创建和业务逻辑层分开，实现了责任的分割
    2.可以有效的进行代码复用，如客户端A和客户端B都需要一个具体对象，客户端A和客户端B可以通过同一个简单工厂来获取具体类型的实例

缺点
    1.违背了“开闭原则”: “对扩展开放，对修改关闭”, 每次增加一个类的时候必须修改工厂类
    2.工厂内集中了所有产品创建逻辑，一旦不能正常工作，所有产品都会受到影响