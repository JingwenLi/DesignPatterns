模式定义
    工厂方法模式定义一个用于创建对象的接口，让子类决定实例化哪一个类。
    工厂方法使将产品类的实例化操作延迟到工厂子类中完成，即通过工厂子类来确定究竟应该实例化哪一个具体产品类。
    核心工厂类不再负责产品的创建，这样核心类成为一个抽象工厂角色，仅负责具体工厂子类必须实现的接口。
    这样进一步抽象化的好处是使得工厂方法模式可以使系统在不修改具体工厂角色的情况下引进新的产品。

    工厂方法模式分离了调用者和被调用者，两者都依赖于抽象，都可以各自实现自己的功能

包含如下角色：
    Factory：抽象工厂角色
        定义创建产品对象的公共接口

    ConcreteFactory：具体工厂角色
        负责生成具体的产品对象

    Product：抽象产品角色

    ConcreteProduct：具体产品角色

优点
    1.良好的扩展性，当系统中需要加入新产品时，无须修改抽象工厂和抽象产品提供的接口，也无须修改其他的具体工厂和具体产品，而只要添加一个具体工厂和具体产品就可以完成系统的扩展。

缺点
    1.类的个数容易过多，增加复杂度
    2.增加了系统的抽象性和理解难度
    3.实现抽象工厂接口的具体工厂只能生产出一种产品