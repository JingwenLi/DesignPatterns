模式定义
	用来创建一组相关或者相互依赖的对象

包含如下角色：
    Factory：抽象工厂角色
        有几类产品，则声明几个方法
    
    ConcreteFactory：具体工厂角色

    Product：抽象产品角色

    ConcreteProduct：具体产品角色

优点
    1.良好的封装性，在工厂方法模式中，工厂方法用来创建业务所需要的产品，同时还向客户隐藏了具体产品的创建细节，只需要关心所需产品对应的工厂，降低了模块间的耦合性。
    2.良好的扩展性，当系统中需要加入新产品时，无须修改抽象工厂和抽象产品提供的接口，也无须修改其他的具体工厂和具体产品，而只要添加一个具体工厂和具体产品就可以完成系统的扩展。
    3.屏蔽产品类，这一特点非常重要，产品类的实现如何变化，调用者都不需要关心，它只需要关心产品的接口，只要接口保持不变，系统中的上层模块就不会发生变化。

缺点
    1.很难支持新种类产品的变化
        这是因为抽象工厂接口中已经确定了可以被创建的产品集合，如果需要添加新产品，此时就必须去修改抽象工厂的接口，这样就涉及到抽象工厂类的以及所有子类的改变，这就违背了"开闭原则"
